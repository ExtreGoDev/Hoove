FORMAT: 1A
HOST: hoove.herokuapp.com/

# hoove

Hoove é a API de uma aplicação de mesmo nome, cuja tem o objetivo de melhorar a saúde dos usuários por meio da prática de atividades físicas, baseada no poder coletivo. 

> Todas as operações de post, os ids incrementaveis são sempre incrementados no banco de dados de 10 em 10, alguns exemplos podem não estar exemplificando isto de forma fiel.

# Event [/eventos]
Requisições gerais de eventos.
### Get List of Events [GET]

+ Response 200 (application/json)

        [
            [
                {
                    "id": 1,
                    "nome": "corrida dos brother",
                    "lugar": "casa da mae joana",
                    "dataHoraInicio": "2019-12-22T20:20:00",
                    "dataHoraFim": "2019-12-23T20:20:00",
                    "categoria": "Corrida",
                    "status": true,
                    "mediaIdadeParticipantes": null,
                    "participantesEvento": []
                },
                {
                    "id": 11,
                    "nome": "corrida da galera",
                    "lugar": "praça central",
                    "dataHoraInicio": "2019-12-22T23:20:00",
                    "dataHoraFim": "2019-12-23T23:20:00",
                    "categoria": "Corrida",
                    "status": true,
                    "mediaIdadeParticipantes": null,
                    "participantesEvento": []
                }
            ]
        ]

### Post Event[POST]

+ Request (application/json)

        {
            "nome":"corrida da galera",
            "lugar":"praça central",
            "dataHoraInicio":"22/12/2019 23:20",
            "duracao": "24",
            "categoria":"Corrida",
            "status":true
        }

+ Response 201 (application/json)

              {
                    "id": 11,
                    "nome": "corrida da galera",
                    "lugar": "praça central",
                    "dataHoraInicio": "2019-12-22T23:20:00",
                    "dataHoraFim": "2019-12-23T23:20:00",
                    "categoria": "Corrida",
                    "status": true,
                    "mediaIdadeParticipantes": null,
                    "participantesEvento": null
                }

## Event By Id [/eventos/{id}]
Requisição para um evento específico.
### Get Event By Id[GET]
+ Parameters
    + id (number) - ID do evento 
    

+ Response 200 (application/json)

        
            {
                "id": 2,
                "nome": "corrida da galera da rua",
                "lugar": "praça central",
                "dataHoraInicio": "2019-12-22T20:20:00",
                "dataHoraFim": "2019-12-23T20:20:00",
                "categoria": "Corrida",
                "status": true,
                "mediaIdadeParticipantes": null,
                "participantesEvento": []
            }
        

## Event Page [/eventos/page]

### Get Page of Events[GET]

+ Response 200 (application/json)

        {
            "content": [
                {
                "id": 11,
                "nome": "corrida da galera",
                "lugar": "praça central",
                "dataHoraInicio": "2019-12-22T23:20:00",
                "dataHoraFim": "2019-12-23T23:20:00",
                "categoria": "Corrida",
                "status": true,
                "mediaIdadeParticipantes": null,
                "participantesEvento": []
                },
                {
                "id": 1,
                "nome": "corrida dos brother",
                "lugar": "casa da mae joana",
                "dataHoraInicio": "2019-12-22T20:20:00",
                "dataHoraFim": "2019-12-23T20:20:00",
                "categoria": "Corrida",
                "status": true,
                "mediaIdadeParticipantes": null,
                "participantesEvento": []
                }
            ],
            "pageable": {
                "sort": {
                "sorted": true,
                "unsorted": false,
                "empty": false
                },
                "pageSize": 24,
                "pageNumber": 0,
                "offset": 0,
                "paged": true,
                "unpaged": false
            },
            "totalPages": 1,
            "totalElements": 2,
            "last": true,
            "first": true,
            "sort": {
                "sorted": true,
                "unsorted": false,
                "empty": false
            },
            "numberOfElements": 2,
            "size": 24,
            "number": 0,
            "empty": false
        }

## Event Page With Arguments [/eventos/page?page={page_number}&orderBy={argument}&direction={direc_value}]
### Get Page Of Events Customized[GET]
Retorna evento em forma de página de acordo com os argumentos impostos, exemplo a acima foi requisitado em:
> /eventos/page?page=0&orderBy=nome&direction=DESC

+ Parameters
    + page_number (number) - Número da página.
    + argument (string) - nome do argumento a ser ordenado, por exemplo: nome,hora,lugar.
    + direc_value (string) - ASC ou DESC, indica se vai ser ordenado em ordem crescente ou decrescente.


+ Response 200 (application/json)


        {
            "content": [
                {
                "id": 5,
                "nome": "zaaaaaacorrida dos brother",
                "lugar": "casa da mae joana",
                "data": null,
                "hora": "20:20",
                "categoria": "Corrida",
                "status": true,
                "participantesEvento": []
                },
                {
                "id": 1,
                "nome": "corrida dos brother",
                "lugar": "casa da mae joana",
                "data": null,
                "hora": "20:20",
                "categoria": "Corrida",
                "status": true,
                "participantesEvento": []
                },
                {
                "id": 2,
                "nome": "corrida dos brother",
                "lugar": "casa da mae joana",
                "data": null,
                "hora": "20:20",
                "categoria": "Corrida",
                "status": true,
                "participantesEvento": []
                },
                {
                "id": 3,
                "nome": "aacorrida dos brother",
                "lugar": "casa da mae joana",
                "data": null,
                "hora": "20:20",
                "categoria": "Corrida",
                "status": true,
                "participantesEvento": []
                },
                {
                "id": 4,
                "nome": "aaaaaacorrida dos brother",
                "lugar": "casa da mae joana",
                "data": null,
                "hora": "20:20",
                "categoria": "Corrida",
                "status": true,
                "participantesEvento": []
                }
            ],
            "pageable": {
                "sort": {
                "sorted": true,
                "unsorted": false,
                "empty": false
                },
                "pageSize": 24,
                "pageNumber": 0,
                "offset": 0,
                "paged": true,
                "unpaged": false
            },
            "totalPages": 1,
            "totalElements": 5,
            "last": true,
            "first": true,
            "sort": {
                "sorted": true,
                "unsorted": false,
                "empty": false
            },
            "number": 0,
            "numberOfElements": 5,
            "size": 24,
            "empty": false
        }


## Quit Event [/eventos/{event_id}/quit?asp_id={aspirant_id}]
### Quit Event[DELETE]

Permite aspirante sair de um evento que participa.

+ Parameters
    + event_id (number) - ID do evento
    + aspirant_id (number) - ID do aspirante

+ Response 204


## Participate Event [/eventos/{id}/participate]
Requisição especifica de Aspirante e Evento.

### Participate Event[POST]

Permite determinado aspirante participar de um evento, 
o id do respectivo aspirante deve ser passado no **Body** da requisição.

+ Parameters
    + id (number) - ID do evento

+ Request (application/json)

            {   
                "id":"1"
            }
+ Response 200 (application/json)
    
            {
                "id": 1,
                "nome": "corrida dos brother",
                "lugar": "casa da mae joana",
                "dataHoraInicio": "2019-12-22T20:20:00",
                "dataHoraFim": "2019-12-23T20:20:00",
                "categoria": "Corrida",
                "status": true,
                "mediaIdadeParticipantes": 20,
                "participantesEvento": [
                    {
                    "nome": "Lucas",
                    "id": 1,
                    "email": "lucasvufma@gmail.com",
                    "numero": "98986024266",
                    "conquista": null,
                    "avaliacao": 4.5,
                    "status": true,
                    "senha": "$2a$10$ENQmLhyOVHmPbagMVjIgDu1enmAVTBKlVqme0lAzcZKKGjCjSBJoy",
                    "idade": 20
                    }
                ]
        }


## Aspirant [/aspirantes]

Requisições gerais para todos os aspirantes.

### Post Aspirante [POST]

Requisição de registro temporaria.

+ Request (application/json)

            {
                "nome": "Stalone",
                "email": "SouORambo@gmail.com",
                "numero":"98982024211",
                "senha":"Stalone_Na_Selva",
                "idade": 15
            }

+ Response 201 (application/json)

            {
                "nome": "Stalone",
                "id": 5,
                "email": "SouORambo@gmail.com",
                "numero": "98982024211",
                "conquista": null,
                "avaliacao": 4.5,
                "status": true,
                "senha": "$2a$10$vDWuxnpBI1s4hJ0nAb4ec.pOvmHGY9rpA./aSzwTkdsMFA4jfH5Am",
                "idade": 15
            }

## Specific Aspirant  [/aspirantes/{id}]
Requisições para aspirante específico.

### Delete Aspirant [DELETE]
+ Parameters
    + id (number) - ID do aspirante

+ Response 204

### Get Aspirant [GET]
+ Response 201 (application/json)

         {
            "nome": "Lucas",
            "id": 1,
            "email": "lucasvufma@gmail.com",
            "numero": "98986024266",
            "conquista": null,
            "avaliacao": 4.5,
            "status": true,
            "senha": "$2a$10$ENQmLhyOVHmPbagMVjIgDu1enmAVTBKlVqme0lAzcZKKGjCjSBJoy",
            "idade": 20
         }   


## Friendship [/amizades/{id}]
Endpoint de amizades.

### Get Friendship [GET]
Retorna uma lista das amizades de um aspirante específico.

+ Parameters
    + id (number) - ID do aspirante

+ Response 200 (application/json)

        [
            {
                "nome": "Lucas",
                "id": 1,
                "email": "lucasvufma@gmail.com",
                "numero": "98986024266",
                "conquista": null,
                "avaliacao": 4.5,
                "status": true,
                "senha": "$2a$10$mnj3jeQYsfnLmFdjT0VfDe99v8QPxvfSGeDDsq3hMke0iVLJWaOGS",
                "foto": null

            }

        ]

## Friendship Requests [/amizades/{id}/pendentes]
Endpoint de pedidos de amizade pendentes.

### Get Friendship Requests[GET]
Retorna uma lista de aspirantes que solicitaram amizade e estão pendentes.

+ Parameters
    + id (number) - ID do aspirante

+ Response 200 (application/json)

        [
            {
                "nome": "Lucas",
                "id": 1,
                "email": "lucasvufma@gmail.com",
                "numero": "98986024266",
                "conquista": null,
                "avaliacao": 4.5,
                "status": true,
                "senha": "$2a$10$ERAl1X999ZlM.n3o9AZ9kOMAct70xnnqSJkOucup.2am5trtNNbVu",
                "foto": null
            }
        ]

## Request Friendship [/amizades/{id}/add?asp_id={aspirant_id}]
Endpoint para solicitar amizade.
### Post Friendship Request[POST]
+ Parameters
    + id (number) - ID do aspirante que está solicitando a amizade.
    + aspirant_id (number) - ID do aspirante que está sendo enviado o pedido.

+ Response 201 


## Accept Friendship [/amizades/{id}/accept?request={aspirant_id}]
Endpoint para aceitar solicitação de amizade.
### Post Accept Friendship Request[POST]
+ Parameters
    + id (number) - ID do aspirante que está aceitando o pedido de amizade.
    + aspirant_id (number) - ID do aspirante dono do pedido de amizade.

+ Response 201

